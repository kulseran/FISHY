package wrappers.os;

message eKeyMap {
  enum type {
    KEY_MOUSE_1 = 1;
    KEY_MOUSE_2 = 2;
    KEY_MOUSE_3 = 3;
    KEY_MOUSE_4 = 4;
    KEY_MOUSE_5 = 5;
    KEY_ESC = 6;
    KEY_BACKSPACE = 7;
    KEY_TAB = 8;
    KEY_PAUSE = 9;
    KEY_PRINTSCREEN = 10;
    KEY_ENTER = 11;
    KEY_A = 12;
    KEY_B = 13;
    KEY_C = 14;
    KEY_D = 15;
    KEY_E = 16;
    KEY_F = 17;
    KEY_G = 18;
    KEY_H = 19;
    KEY_I = 20;
    KEY_J = 21;
    KEY_K = 22;
    KEY_L = 23;
    KEY_M = 24;
    KEY_N = 25;
    KEY_O = 26;
    KEY_P = 27;
    KEY_Q = 28;
    KEY_R = 29;
    KEY_S = 30;
    KEY_T = 31;
    KEY_U = 32;
    KEY_V = 33;
    KEY_W = 34;
    KEY_X = 35;
    KEY_Y = 36;
    KEY_Z = 37;
    KEY_a = 38;
    KEY_b = 39;
    KEY_c = 40;
    KEY_d = 41;
    KEY_e = 42;
    KEY_f = 43;
    KEY_g = 44;
    KEY_h = 45;
    KEY_i = 46;
    KEY_j = 47;
    KEY_k = 48;
    KEY_l = 49;
    KEY_m = 50;
    KEY_n = 51;
    KEY_o = 52;
    KEY_p = 53;
    KEY_q = 54;
    KEY_r = 55;
    KEY_s = 56;
    KEY_t = 57;
    KEY_u = 58;
    KEY_v = 59;
    KEY_w = 60;
    KEY_x = 61;
    KEY_y = 62;
    KEY_z = 63;
    KEY_0 = 64;
    KEY_1 = 65;
    KEY_2 = 66;
    KEY_3 = 67;
    KEY_4 = 68;
    KEY_5 = 69;
    KEY_6 = 70;
    KEY_7 = 71;
    KEY_8 = 72;
    KEY_9 = 73;
    KEY_NUM_0 = 74;
    KEY_NUM_1 = 75;
    KEY_NUM_2 = 76;
    KEY_NUM_3 = 77;
    KEY_NUM_4 = 78;
    KEY_NUM_5 = 79;
    KEY_NUM_6 = 80;
    KEY_NUM_7 = 81;
    KEY_NUM_8 = 82;
    KEY_NUM_9 = 83;
    KEY_NUM_MUL = 84;
    KEY_NUM_ADD = 85;
    KEY_NUM_SUB = 86;
    KEY_NUM_PERIOD = 87;
    KEY_NUM_DIV = 88;
    KEY_NUM_ENTER = 89;
    KEY_PLUS = 90;
    KEY_MINUS = 91;
    KEY_LBRACKET = 92;
    KEY_RBRACKET = 93;
    KEY_PIPE = 94;
    KEY_COLON = 95;
    KEY_PERIOD = 96;
    KEY_COMMA = 97;
    KEY_QUOTE = 98;
    KEY_QUESTION = 99;
    KEY_TILDE = 100;
    KEY_SPACE = 101;
    KEY_HOME = 102;
    KEY_END = 103;
    KEY_LEFT = 104;
    KEY_RIGHT = 105;
    KEY_UP = 106;
    KEY_DOWN = 107;
    KEY_INSERT = 108;
    KEY_DELETE = 109;
    KEY_PAGEUP = 110;
    KEY_PAGEDOWN = 111;
    KEY_F1 = 112;
    KEY_F2 = 113;
    KEY_F3 = 114;
    KEY_F4 = 115;
    KEY_F5 = 116;
    KEY_F6 = 117;
    KEY_F7 = 118;
    KEY_F8 = 119;
    KEY_F9 = 120;
    KEY_F10 = 121;
    KEY_F11 = 122;
    KEY_F12 = 123;
    KEY_F13 = 124;
    KEY_F14 = 125;
    KEY_F15 = 126;
    KEY_F16 = 127;
    KEY_F17 = 128;
    KEY_F18 = 129;
    KEY_F19 = 130;
    KEY_F20 = 131;
    KEY_F21 = 132;
    KEY_F22 = 133;
    KEY_F23 = 134;
    KEY_F24 = 135;
    KEY_SYS_WIN = 136;
    KEY_SYS_APP = 137;
    KEY_LSHIFT = 138;
    KEY_RSHIFT = 139;
    KEY_LCTRL = 140;
    KEY_RCTRL = 141;
    KEY_LALT = 142;
    KEY_RALT = 143;
    KEY_JOY_0 = 144;
    KEY_JOY_1 = 145;
    KEY_JOY_2 = 146;
    KEY_JOY_3 = 147;
    KEY_JOY_4 = 148;
    KEY_JOY_5 = 149;
    KEY_JOY_6 = 150;
    KEY_JOY_7 = 151;
    KEY_JOY_8 = 152;
    KEY_JOY_9 = 153;
    KEY_JOY_10 = 154;
    KEY_JOY_11 = 155;
    KEY_JOY_12 = 156;
    KEY_JOY_13 = 157;
    KEY_JOY_14 = 158;
    KEY_JOY_15 = 159;
    KEY_JOY_16 = 160;
    KEY_JOY_17 = 161;
    KEY_JOY_18 = 162;
    KEY_JOY_19 = 163;
    KEY_JOY_20 = 164;
    KEY_JOY_21 = 165;
    KEY_JOY_22 = 166;
    KEY_JOY_23 = 167;
    KEY_JOY_24 = 168;
    KEY_JOY_25 = 169;
    KEY_JOY_26 = 170;
    KEY_JOY_27 = 171;
    KEY_JOY_28 = 172;
    KEY_JOY_29 = 173;
    KEY_JOY_30 = 174;
    KEY_JOY_31 = 175;
    KEY_JOY_32 = 176;
    KEY_JOY_33 = 177;
    KEY_JOY_34 = 178;
    KEY_JOY_35 = 179;
    KEY_JOY_36 = 180;
    KEY_JOY_37 = 181;
    KEY_JOY_38 = 182;
    KEY_JOY_39 = 183;
    KEY_JOY_40 = 184;
    KEY_JOY_41 = 185;
    KEY_JOY_42 = 186;
    KEY_JOY_43 = 187;
    KEY_JOY_44 = 188;
    KEY_JOY_45 = 189;
    KEY_JOY_46 = 190;
    KEY_JOY_47 = 191;
    KEY_JOY_48 = 192;
    KEY_JOY_49 = 193;
    KEY_JOY_50 = 194;
  }
}

message eAxisMap {
  enum type {
    AXIS_MOUSE_X = 1;
    AXIS_MOUSE_Y = 2;
    AXIS_MOUSE_Z = 3;

    AXIS_JOY_X = 4;
    AXIS_JOY_Y = 5;
    AXIS_JOY_Z = 6;
    AXIS_JOY_THROTTLE_1 = 7;
    AXIS_JOY_THROTTLE_2 = 8;
    AXIS_JOY_TRIM_1 = 9;
    AXIS_JOY_TRIM_2 = 10;
    AXIS_JOY_HAT_1 = 11;
    AXIS_JOY_SECOND_X = 12;
    AXIS_JOY_SECOND_Y = 13;
  }
}

message AxisMapping {
  int32 axis_id = 1;
  int32 axis_name = 2;
  int32 axis_min_value = 3;
  int32 axis_max_value = 4;
  int32 axis_deadzone_width = 5;
}

message DeviceMapping {
  string name = 1;
  int32 vendor_id = 2;
  int32 product_id = 3;
  AxisMapping axis[] = 4;
}

message DeviceCfg {
  DeviceMapping mapping[] = 1;
}
